import { useEffect, useState } from "react"
import { useSearchParams, useNavigate } from "react-router-dom"
import { Container, Row, Col, Card, Form, Button, Alert } from "react-bootstrap"
import axios from "axios"
import { Lock, CheckCircle } from "lucide-react"

const ResetPassword = () => {
  const [searchParams] = useSearchParams()
  const navigate = useNavigate()

  const [matKhau, setMatKhau] = useState("")
  const [xacNhan, setXacNhan] = useState("")
  const [loading, setLoading] = useState(false)
  const [success, setSuccess] = useState(false)
  const [error, setError] = useState("")

  const token = searchParams.get("token")
  const email = searchParams.get("email")

  useEffect(() => {
    if (!token || !email) {
      setError("Li√™n k·∫øt ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u kh√¥ng h·ª£p l·ªá.")
    }
  }, [token, email])

  const handleSubmit = async (e) => {
    e.preventDefault()
    setError("")
    setLoading(true)

    if (matKhau.length < 6) {
      setError("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±.")
      setLoading(false)
      return
    }

    if (matKhau !== xacNhan) {
      setError("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.")
      setLoading(false)
      return
    }

    try {
      const res = await axios.post("http://127.0.0.1:8000/api/reset-password", {
        email,
        token,
        new_password: matKhau,
        new_password_confirmation: xacNhan, // üëà th√™m tr∆∞·ªùng n√†y
      })

      setSuccess(true)
      setTimeout(() => navigate("/login"), 3000) // T·ª± ƒë·ªông chuy·ªÉn sau 3s
    } catch (err) {
      console.error(err)
      setError(err.response?.data?.message || "ƒê√£ x·∫£y ra l·ªói.")
    } finally {
      setLoading(false)
    }
  }

  return (
    <Container className="mt-5">
      <Row className="justify-content-center">
        <Col md={6}>
          <Card className="p-4">
            <h4 className="text-center mb-3">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h4>

            {error && <Alert variant="danger">{error}</Alert>}
            {success ? (
              <Alert variant="success">
                <CheckCircle className="me-2" />
                M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng! ƒêang chuy·ªÉn h∆∞·ªõng...
              </Alert>
            ) : (
              <Form onSubmit={handleSubmit}>
                <Form.Group className="mb-3">
                  <Form.Label>M·∫≠t kh·∫©u m·ªõi</Form.Label>
                  <Form.Control
                    type="password"
                    placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi"
                    value={matKhau}
                    onChange={(e) => setMatKhau(e.target.value)}
                    required
                  />
                </Form.Group>

                <Form.Group className="mb-4">
                  <Form.Label>X√°c nh·∫≠n m·∫≠t kh·∫©u</Form.Label>
                  <Form.Control
                    type="password"
                    placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
                    value={xacNhan}
                    onChange={(e) => setXacNhan(e.target.value)}
                    required
                  />
                </Form.Group>

                <Button type="submit" className="w-100" disabled={loading}>
                  {loading ? "ƒêang x·ª≠ l√Ω..." : "X√°c nh·∫≠n ƒë·ªïi m·∫≠t kh·∫©u"}
                </Button>
              </Form>
            )}
          </Card>
        </Col>
      </Row>
    </Container>
  )
}

export default ResetPassword
