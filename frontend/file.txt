npm install @mui/x-data-grid
npm install axios
npm install react-router-dom
    
     { 
      field: 'created_at', 
      headerName: 'Ngày tạo', 
      width: 160,
      renderCell: (params) => (
        <Typography variant="caption" color="text.secondary">
          {formatDate(params.value)}
        </Typography>
      )
    },
    const formatDate = (dateString) => {
    if (!dateString) return 'N/A';
    return new Date(dateString).toLocaleDateString('vi-VN', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
    });
  };


  /* Custom CSS for the perfume shop */

/* General styles */
body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  
}

/* Product card hover effects */
.product-card {
  overflow: hidden;
  transition: all 0.3s ease;
}

.product-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
}

/* Category card hover effects */
.category-card {
  overflow: hidden;
  transition: all 0.3s ease;
}

.category-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
}

/* Custom gradient buttons */
.btn-gradient {
  background: linear-gradient(to right, #e83e8c, #6f42c1);
  border: none;
  color: white;
}

.btn-gradient:hover {
  background: linear-gradient(to right, #d83177, #5f35a9);
  color: white;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #555;
}



import React, { useEffect, useState } from 'react'
import { Container, Row, Col, Card, Button } from "react-bootstrap"

const getWishlist = () => {
        return JSON.parse(sessionStorage.getItem('wishlist')) || [];
    }
const removeFromWishlist = (productId) => {
  const wishlist = JSON.parse(sessionStorage.getItem("wishlist")) || []
  const updatedWishlist = wishlist.filter((item) => item.id !== productId)
  sessionStorage.setItem("wishlist", JSON.stringify(updatedWishlist))
  window.dispatchEvent(new Event("wishlist-updated"))
}
const Wishlist = () => {
    const [wishlist, setWishlist] = useState([])

    useEffect(() => {
    setWishlist(getWishlist())

    const handleUpdate = () => setWishlist(getWishlist())
    window.addEventListener("wishlist-updated", handleUpdate)

    return () => {
      window.removeEventListener("wishlist-updated", handleUpdate)
    }
  }, [])
   const getImageUrl = (path) => {
    if (!path) return "/placeholder.svg?height=100&width=100"
    if (path.startsWith("http")) return path
    return `http://127.0.0.1:8000/storage/images/${path.replace(/^images\//, "")}`
  }

  if (wishlist.length === 0) {
    return (
      <Container className="mt-4">
        <h3>Danh sách yêu thích trống</h3>
      </Container>
    )
  }
  return (
   <Container className="mt-4">
      <h3 className="mb-4">Danh sách yêu thích</h3>
      <Row>
        {wishlist.map((product) => (
          <Col key={product.id} md={4} sm={6} className="mb-4">
            <Card className="h-100 shadow-sm">
              <Card.Img
                variant="top"
                src={product.hinh_anh || "/placeholder.jpg"}
                style={{ height: "200px", objectFit: "cover" }}
              />
              <Card.Body>
                <Card.Title>{product.ten_san_pham}</Card.Title>
                <Card.Text>{product.mo_ta?.substring(0, 100)}...</Card.Text>
                <Button
                  variant="danger"
                  onClick={() => {
                    removeFromWishlist(product.id)
                    setWishlist(getWishlist())
                  }}
                >
                  Xoá khỏi yêu thích
                </Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  )
}

export default Wishlist